{"ast":null,"code":"var _jsxFileName = \"E:\\\\React Js\\\\hbapp\\\\src\\\\Components\\\\Chat.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst YourComponent = () => {\n  _s();\n  const [selectedPictures, setSelectedPictures] = useState([]);\n  const [formData, setFormData] = useState({\n    // ... other form data\n  });\n  useEffect(() => {\n    const loadReCaptcha = () => {\n      const script = document.createElement('script');\n      script.src = 'https://www.google.com/recaptcha/api.js';\n      script.async = true;\n      script.defer = true;\n      document.head.appendChild(script);\n    };\n    loadReCaptcha();\n    return () => {\n      // Cleanup if needed\n      document.head.removeChild(document.head.lastChild);\n    };\n  }, []);\n  const handleSubmit = e => {\n    e.preventDefault();\n    // Add your form submission logic here\n    // You can access selectedPictures and formData here\n  };\n\n  useEffect(() => {\n    // Make sure to include your onloadCallback function here\n    window.onloadCallback = function () {\n      window.grecaptcha.render('g-recaptcha', {\n        'sitekey': '6LcnjRwpAAAAANRDtbBwSwzFA4sKKBWZdT8iZjlp'\n      });\n    };\n  }, []);\n  const handlePictureChange = e => {\n    const files = e.target.files;\n    const selectedPictureArray = [];\n    for (let i = 0; i < files.length; i++) {\n      selectedPictureArray.push(URL.createObjectURL(files[i]));\n    }\n    setSelectedPictures(selectedPictureArray);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      marginTop: '6rem'\n    },\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        multiple: true,\n        onChange: handlePictureChange,\n        accept: \"image/*\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), selectedPictures.map((picture, index) => /*#__PURE__*/_jsxDEV(\"img\", {\n        src: picture,\n        alt: `Selected Picture ${index + 1}`,\n        style: {\n          width: '100px',\n          height: '100px',\n          marginRight: '10px'\n        }\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 21\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"g-recaptcha\",\n        id: \"g-recaptcha\",\n        \"data-sitekey\": \"6LeSkxwpAAAAAJr0__9WFMn2k3bJ9EW1eT52aaqm\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary\",\n        children: \"Sign in\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n};\n_s(YourComponent, \"N88O/iLPty8idGapS6m0OVrmYxA=\");\n_c = YourComponent;\nexport default YourComponent;\nvar _c;\n$RefreshReg$(_c, \"YourComponent\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","YourComponent","_s","selectedPictures","setSelectedPictures","formData","setFormData","loadReCaptcha","script","document","createElement","src","async","defer","head","appendChild","removeChild","lastChild","handleSubmit","e","preventDefault","window","onloadCallback","grecaptcha","render","handlePictureChange","files","target","selectedPictureArray","i","length","push","URL","createObjectURL","style","marginTop","children","onSubmit","type","multiple","onChange","accept","fileName","_jsxFileName","lineNumber","columnNumber","map","picture","index","alt","width","height","marginRight","className","id","_c","$RefreshReg$"],"sources":["E:/React Js/hbapp/src/Components/Chat.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst YourComponent = () => {\r\n    const [selectedPictures, setSelectedPictures] = useState([]);\r\n    const [formData, setFormData] = useState({\r\n        // ... other form data\r\n    });\r\n\r\n    useEffect(() => {\r\n        const loadReCaptcha = () => {\r\n            const script = document.createElement('script');\r\n            script.src = 'https://www.google.com/recaptcha/api.js';\r\n            script.async = true;\r\n            script.defer = true;\r\n            document.head.appendChild(script);\r\n        };\r\n\r\n        loadReCaptcha();\r\n\r\n        return () => {\r\n            // Cleanup if needed\r\n            document.head.removeChild(document.head.lastChild);\r\n        };\r\n    }, []);\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        // Add your form submission logic here\r\n        // You can access selectedPictures and formData here\r\n    };\r\n\r\n    useEffect(() => {\r\n        // Make sure to include your onloadCallback function here\r\n        window.onloadCallback = function () {\r\n            window.grecaptcha.render('g-recaptcha', {\r\n                'sitekey': '6LcnjRwpAAAAANRDtbBwSwzFA4sKKBWZdT8iZjlp'\r\n            });\r\n        };\r\n    }, []);\r\n\r\n    const handlePictureChange = (e) => {\r\n        const files = e.target.files;\r\n        const selectedPictureArray = [];\r\n\r\n        for (let i = 0; i < files.length; i++) {\r\n            selectedPictureArray.push(URL.createObjectURL(files[i]));\r\n        }\r\n\r\n        setSelectedPictures(selectedPictureArray);\r\n    };\r\n\r\n    return (\r\n        <div style={{ marginTop: '6rem' }}>\r\n            <form onSubmit={handleSubmit}>\r\n                {/* ... (your form fields) ... */}\r\n\r\n                {/* File input for multiple picture selection */}\r\n                <input type=\"file\" multiple onChange={handlePictureChange} accept=\"image/*\" />\r\n\r\n                {/* Display selected pictures */}\r\n                {selectedPictures.map((picture, index) => (\r\n                    <img key={index} src={picture} alt={`Selected Picture ${index + 1}`} style={{ width: '100px', height: '100px', marginRight: '10px' }} />\r\n                ))}\r\n\r\n                {/* Other form fields */}\r\n                {/* For example: <input type=\"text\" value={formData.someField} onChange={(e) => setFormData({ ...formData, someField: e.target.value })} /> */}\r\n\r\n                <div className=\"g-recaptcha\" id=\"g-recaptcha\" data-sitekey=\"6LeSkxwpAAAAAJr0__9WFMn2k3bJ9EW1eT52aaqm\"></div>\r\n                {/* Replace YOUR_SITE_KEY with the site key you obtained from reCAPTCHA registration */}\r\n\r\n                <button type=\"submit\" className=\"btn btn-primary\">Sign in</button>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default YourComponent;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}