{"ast":null,"code":"var _jsxFileName = \"E:\\\\React Js\\\\hbapp\\\\src\\\\Components\\\\Time.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RealTimeClock = () => {\n  _s();\n  const [currentTime, setCurrentTime] = useState(new Date());\n  useEffect(() => {\n    // Update the current time every second\n    const intervalId = setInterval(() => {\n      setCurrentTime(new Date());\n    }, 1000);\n\n    // Cleanup the interval on component unmount\n    return () => clearInterval(intervalId);\n  }, []);\n  const hours = currentTime.getHours().toString().padStart(2, '0');\n  const minutes = currentTime.getMinutes().toString().padStart(2, '0');\n  const seconds = currentTime.getSeconds().toString().padStart(2, '0');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [hours, \":\", minutes, \":\", seconds]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n_s(RealTimeClock, \"f3elDUct5ap4W3FuLtGG73aMsLc=\");\n_c = RealTimeClock;\nexport default RealTimeClock;\nvar _c;\n$RefreshReg$(_c, \"RealTimeClock\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","RealTimeClock","_s","currentTime","setCurrentTime","Date","intervalId","setInterval","clearInterval","hours","getHours","toString","padStart","minutes","getMinutes","seconds","getSeconds","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["E:/React Js/hbapp/src/Components/Time.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst RealTimeClock = () => {\r\n  const [currentTime, setCurrentTime] = useState(new Date());\r\n\r\n  useEffect(() => {\r\n    // Update the current time every second\r\n    const intervalId = setInterval(() => {\r\n      setCurrentTime(new Date());\r\n    }, 1000);\r\n\r\n    // Cleanup the interval on component unmount\r\n    return () => clearInterval(intervalId);\r\n  }, []);\r\n\r\n  const hours = currentTime.getHours().toString().padStart(2, '0');\r\n  const minutes = currentTime.getMinutes().toString().padStart(2, '0');\r\n  const seconds = currentTime.getSeconds().toString().padStart(2, '0');\r\n\r\n  return (\r\n    <div>\r\n      <h2>\r\n        {hours}:{minutes}:{seconds}\r\n      </h2>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RealTimeClock;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGP,QAAQ,CAAC,IAAIQ,IAAI,CAAC,CAAC,CAAC;EAE1DP,SAAS,CAAC,MAAM;IACd;IACA,MAAMQ,UAAU,GAAGC,WAAW,CAAC,MAAM;MACnCH,cAAc,CAAC,IAAIC,IAAI,CAAC,CAAC,CAAC;IAC5B,CAAC,EAAE,IAAI,CAAC;;IAER;IACA,OAAO,MAAMG,aAAa,CAACF,UAAU,CAAC;EACxC,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMG,KAAK,GAAGN,WAAW,CAACO,QAAQ,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;EAChE,MAAMC,OAAO,GAAGV,WAAW,CAACW,UAAU,CAAC,CAAC,CAACH,QAAQ,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;EACpE,MAAMG,OAAO,GAAGZ,WAAW,CAACa,UAAU,CAAC,CAAC,CAACL,QAAQ,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;EAEpE,oBACEZ,OAAA;IAAAiB,QAAA,eACEjB,OAAA;MAAAiB,QAAA,GACGR,KAAK,EAAC,GAAC,EAACI,OAAO,EAAC,GAAC,EAACE,OAAO;IAAA;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxB;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAACnB,EAAA,CAxBID,aAAa;AAAAqB,EAAA,GAAbrB,aAAa;AA0BnB,eAAeA,aAAa;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}