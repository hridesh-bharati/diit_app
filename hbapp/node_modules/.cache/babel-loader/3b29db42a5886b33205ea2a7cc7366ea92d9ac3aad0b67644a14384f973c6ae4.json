{"ast":null,"code":"var _jsxFileName = \"E:\\\\React Js\\\\hbapp\\\\src\\\\Components\\\\tools\\\\DataModal.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MyForm = () => {\n  _s();\n  const [isChecked, setIsChecked] = useState(false);\n  const handleCheckboxChange = () => {\n    setIsChecked(!isChecked);\n  };\n  const [password, setPassword] = useState('');\n  const [showPassword, setShowPassword] = useState(false);\n  const togglePasswordVisibility = () => {\n    setShowPassword(!showPassword);\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-3 form-check\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          for: \"deleteStudent\",\n          class: \"form-label\",\n          children: \" Enter Student Id's \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          class: \"form-control\",\n          id: \"deleteStudent\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"password\",\n        children: \"Password:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: showPassword ? 'text' : 'password',\n        id: \"password\",\n        value: password,\n        onChange: e => setPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"form-check-label\",\n        htmlFor: \"exampleCheck1\",\n        children: \"Check me out\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: togglePasswordVisibility,\n      children: [showPassword ? 'Hide' : 'Show', \" Password\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      className: `btn btn-primary ${isChecked ? '' : 'disabled'}`,\n      disabled: !isChecked,\n      children: \"Save\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }, this);\n};\n_s(MyForm, \"BB4H9mKbZURzUDkLH9AxdAcPgtk=\");\n_c = MyForm;\nexport default MyForm;\nvar _c;\n$RefreshReg$(_c, \"MyForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","MyForm","_s","isChecked","setIsChecked","handleCheckboxChange","password","setPassword","showPassword","setShowPassword","togglePasswordVisibility","children","className","class","for","fileName","_jsxFileName","lineNumber","columnNumber","type","id","htmlFor","value","onChange","e","target","onClick","disabled","_c","$RefreshReg$"],"sources":["E:/React Js/hbapp/src/Components/tools/DataModal.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst MyForm = () => {\r\n    const [isChecked, setIsChecked] = useState(false);\r\n\r\n    const handleCheckboxChange = () => {\r\n        setIsChecked(!isChecked);\r\n    };\r\n    const [password, setPassword] = useState('');\r\n    const [showPassword, setShowPassword] = useState(false);\r\n  \r\n    const togglePasswordVisibility = () => {\r\n      setShowPassword(!showPassword);\r\n    };\r\n    return (\r\n        <form>\r\n            <div className=\"mb-3 form-check\">\r\n                <div class=\"mb-3\">\r\n                    <label for=\"deleteStudent\" class=\"form-label\"> Enter Student Id's </label>\r\n                    <input type=\"password\" class=\"form-control\" id=\"deleteStudent\" />\r\n                </div>\r\n                <label htmlFor=\"password\">Password:</label>\r\n                <input\r\n                    type={showPassword ? 'text' : 'password'}\r\n                    id=\"password\"\r\n                    value={password}\r\n                    onChange={(e) => setPassword(e.target.value)}\r\n                />\r\n                <label className=\"form-check-label\" htmlFor=\"exampleCheck1\">\r\n                    Check me out\r\n                </label>\r\n            </div>\r\n            <button type=\"button\" onClick={togglePasswordVisibility}>\r\n                {showPassword ? 'Hide' : 'Show'} Password\r\n            </button>\r\n            <button\r\n                type=\"button\"\r\n                className={`btn btn-primary ${isChecked ? '' : 'disabled'}`}\r\n                disabled={!isChecked}\r\n            >\r\n                Save\r\n            </button>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default MyForm;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}