{"ast":null,"code":"// import React, { useState, useEffect } from 'react';\n\n// const YourComponent = () => {\n//     const [checkboxChecked, setCheckboxChecked] = useState(false);\n//     const [reCaptchaCompleted, setReCaptchaCompleted] = useState(false);\n//     const [submit, setSubmit] = useState(false);\n//     const [message, setMessage] = useState('');\n\n//     useEffect(() => {\n//         const script = document.createElement('script');\n//         script.src = 'https://www.google.com/recaptcha/api.js';\n//         script.async = true;\n//         script.defer = true;\n//         document.head.appendChild(script);\n\n//         script.onload = () => {\n//             window.grecaptcha.render('g-recaptcha', {\n//                 sitekey: '6LeSkxwpAAAAAJr0__9WFMn2k3bJ9EW1eT52aaqm',\n//                 callback: () => {\n//                     console.log('reCAPTCHA completed!');\n//                     setReCaptchaCompleted(true);\n//                 },\n//             });\n//         };\n\n//         return () => {\n//             document.head.removeChild(script);\n//         };\n//     }, []);\n\n//     const postForm = () => {\n//         // Add your logic to submit the form data\n//         // For example, you can make an API call here\n\n//         // Update state variables accordingly\n//         setSubmit(true);\n//         setMessage('Submitted Successfully');\n//     };\n\n//     return (\n//         <div className=\"col-12 px-1\" style={{ marginTop: '10rem' }}>\n//             <div className=\"form-check\">\n//                 <div\n\n//                 >\n\n//                 </div>\n//                 <div className=\"bg-success-subtle text-danger p-2 rounded rounded-pill d-inline\">\n//                     <label className=\"form-check-label h5\" htmlFor=\"invalidCheck\">\n//                         <input\n//                             type=\"checkbox\"\n//                             className=\"validCheck\"\n//                             required\n//                             onChange={(e) => setCheckboxChecked(e.target.checked)}\n//                         />\n//                         <span className=\"icon\"> </span>\n//                         <span style={{ fontSize: '1.2rem !important' }}>Declaration</span>\n//                         <span className=\"text-body-secondary\"> / घोषणा </span>\n//                     </label>\n//                 </div>\n//             </div>\n//             <div className=\"col-12 ms-2\" >\n//                 <div className=\"g-recaptcha\" id=\"g-recaptcha\"\n//                     data-sitekey=\"6LeSkxwpAAAAAJr0__9WFMn2k3bJ9EW1eT52aaqm\"\n//                     onChange={(ex) => setReCaptchaCompleted(ex.target.checked)}></div>\n\n//                 {submit ? (\n//                     <button className=\"btn btn-success ms-3\" id=\"checkBtn\" type=\"button\">\n//                         Submitted Successfully\n//                     </button>\n//                 ) : (\n//                     <button\n//                         className=\"btn btn-primary ms-3\"\n//                         id=\"checkBtn\"\n//                         type=\"button\"\n//                         onClick={() => {\n//                             if (checkboxChecked  reCaptchaCompleted) {\n//                                 postForm();\n//                             }\n//                         }}\n//                         disabled={!checkboxChecked && !reCaptchaCompleted}\n//                     >\n//                         Submit\n//                     </button>\n//                 )}\n//                 <div className=\"text-danger d-inline px-1\">{message}</div>\n//             </div>\n//         </div>\n//     );\n// };\n\n// export default YourComponent;","map":{"version":3,"names":[],"sources":["E:/React Js/hbapp/src/Components/Chat.jsx"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\r\n\r\n// const YourComponent = () => {\r\n//     const [checkboxChecked, setCheckboxChecked] = useState(false);\r\n//     const [reCaptchaCompleted, setReCaptchaCompleted] = useState(false);\r\n//     const [submit, setSubmit] = useState(false);\r\n//     const [message, setMessage] = useState('');\r\n\r\n//     useEffect(() => {\r\n//         const script = document.createElement('script');\r\n//         script.src = 'https://www.google.com/recaptcha/api.js';\r\n//         script.async = true;\r\n//         script.defer = true;\r\n//         document.head.appendChild(script);\r\n\r\n//         script.onload = () => {\r\n//             window.grecaptcha.render('g-recaptcha', {\r\n//                 sitekey: '6LeSkxwpAAAAAJr0__9WFMn2k3bJ9EW1eT52aaqm',\r\n//                 callback: () => {\r\n//                     console.log('reCAPTCHA completed!');\r\n//                     setReCaptchaCompleted(true);\r\n//                 },\r\n//             });\r\n//         };\r\n\r\n//         return () => {\r\n//             document.head.removeChild(script);\r\n//         };\r\n//     }, []);\r\n\r\n//     const postForm = () => {\r\n//         // Add your logic to submit the form data\r\n//         // For example, you can make an API call here\r\n\r\n//         // Update state variables accordingly\r\n//         setSubmit(true);\r\n//         setMessage('Submitted Successfully');\r\n//     };\r\n\r\n//     return (\r\n//         <div className=\"col-12 px-1\" style={{ marginTop: '10rem' }}>\r\n//             <div className=\"form-check\">\r\n//                 <div\r\n\r\n//                 >\r\n\r\n\r\n//                 </div>\r\n//                 <div className=\"bg-success-subtle text-danger p-2 rounded rounded-pill d-inline\">\r\n//                     <label className=\"form-check-label h5\" htmlFor=\"invalidCheck\">\r\n//                         <input\r\n//                             type=\"checkbox\"\r\n//                             className=\"validCheck\"\r\n//                             required\r\n//                             onChange={(e) => setCheckboxChecked(e.target.checked)}\r\n//                         />\r\n//                         <span className=\"icon\"> </span>\r\n//                         <span style={{ fontSize: '1.2rem !important' }}>Declaration</span>\r\n//                         <span className=\"text-body-secondary\"> / घोषणा </span>\r\n//                     </label>\r\n//                 </div>\r\n//             </div>\r\n//             <div className=\"col-12 ms-2\" >\r\n//                 <div className=\"g-recaptcha\" id=\"g-recaptcha\"\r\n//                     data-sitekey=\"6LeSkxwpAAAAAJr0__9WFMn2k3bJ9EW1eT52aaqm\"\r\n//                     onChange={(ex) => setReCaptchaCompleted(ex.target.checked)}></div>\r\n\r\n//                 {submit ? (\r\n//                     <button className=\"btn btn-success ms-3\" id=\"checkBtn\" type=\"button\">\r\n//                         Submitted Successfully\r\n//                     </button>\r\n//                 ) : (\r\n//                     <button\r\n//                         className=\"btn btn-primary ms-3\"\r\n//                         id=\"checkBtn\"\r\n//                         type=\"button\"\r\n//                         onClick={() => {\r\n//                             if (checkboxChecked  reCaptchaCompleted) {\r\n//                                 postForm();\r\n//                             }\r\n//                         }}\r\n//                         disabled={!checkboxChecked && !reCaptchaCompleted}\r\n//                     >\r\n//                         Submit\r\n//                     </button>\r\n//                 )}\r\n//                 <div className=\"text-danger d-inline px-1\">{message}</div>\r\n//             </div>\r\n//         </div>\r\n//     );\r\n// };\r\n\r\n// export default YourComponent;\r\n\r\n"],"mappings":"AAAA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}