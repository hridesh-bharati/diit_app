{"ast":null,"code":"var _jsxFileName = \"E:\\\\React Js\\\\hbapp\\\\src\\\\Components\\\\Time.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CounterComponent = () => {\n  _s();\n  const counter = (id, start, end, duration) => {\n    let obj = document.getElementById(id),\n      current = start,\n      range = end - start,\n      increment = end > start ? 1 : -1,\n      step = Math.abs(Math.floor(duration / range)),\n      timer = setInterval(() => {\n        current += increment;\n        obj.textContent = current;\n        if (current === end) {\n          clearInterval(timer);\n        }\n      }, step);\n  };\n  useEffect(() => {\n    counter(\"count1\", 0, 400, 3000);\n    counter(\"count2\", 100, 50, 2500);\n    counter(\"count3\", 0, 40, 3000);\n\n    // Cleanup function to clear intervals when the component unmounts\n    return () => {\n      clearInterval(timer1);\n      clearInterval(timer2);\n      clearInterval(timer3);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      marginTop: '9rem'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      id: \"count1\",\n      children: \"0\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      id: \"count2\",\n      children: \"100\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      id: \"count3\",\n      children: \"0\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(CounterComponent, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = CounterComponent;\nexport default CounterComponent;\nvar _c;\n$RefreshReg$(_c, \"CounterComponent\");","map":{"version":3,"names":["React","useEffect","jsxDEV","_jsxDEV","CounterComponent","_s","counter","id","start","end","duration","obj","document","getElementById","current","range","increment","step","Math","abs","floor","timer","setInterval","textContent","clearInterval","timer1","timer2","timer3","style","marginTop","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["E:/React Js/hbapp/src/Components/Time.jsx"],"sourcesContent":["import React, { useEffect } from 'react';\r\n\r\nconst CounterComponent = () => {\r\n  const counter = (id, start, end, duration) => {\r\n    let obj = document.getElementById(id),\r\n      current = start,\r\n      range = end - start,\r\n      increment = end > start ? 1 : -1,\r\n      step = Math.abs(Math.floor(duration / range)),\r\n      timer = setInterval(() => {\r\n        current += increment;\r\n        obj.textContent = current;\r\n        if (current === end) {\r\n          clearInterval(timer);\r\n        }\r\n      }, step);\r\n  };\r\n\r\n  useEffect(() => {\r\n    counter(\"count1\", 0, 400, 3000);\r\n    counter(\"count2\", 100, 50, 2500);\r\n    counter(\"count3\", 0, 40, 3000);\r\n\r\n    // Cleanup function to clear intervals when the component unmounts\r\n    return () => {\r\n      clearInterval(timer1);\r\n      clearInterval(timer2);\r\n      clearInterval(timer3);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div style={{marginTop:'9rem'}}>\r\n      <p id=\"count1\">0</p>\r\n      <p id=\"count2\">100</p>\r\n      <p id=\"count3\">0</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CounterComponent;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzC,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC7B,MAAMC,OAAO,GAAGA,CAACC,EAAE,EAAEC,KAAK,EAAEC,GAAG,EAAEC,QAAQ,KAAK;IAC5C,IAAIC,GAAG,GAAGC,QAAQ,CAACC,cAAc,CAACN,EAAE,CAAC;MACnCO,OAAO,GAAGN,KAAK;MACfO,KAAK,GAAGN,GAAG,GAAGD,KAAK;MACnBQ,SAAS,GAAGP,GAAG,GAAGD,KAAK,GAAG,CAAC,GAAG,CAAC,CAAC;MAChCS,IAAI,GAAGC,IAAI,CAACC,GAAG,CAACD,IAAI,CAACE,KAAK,CAACV,QAAQ,GAAGK,KAAK,CAAC,CAAC;MAC7CM,KAAK,GAAGC,WAAW,CAAC,MAAM;QACxBR,OAAO,IAAIE,SAAS;QACpBL,GAAG,CAACY,WAAW,GAAGT,OAAO;QACzB,IAAIA,OAAO,KAAKL,GAAG,EAAE;UACnBe,aAAa,CAACH,KAAK,CAAC;QACtB;MACF,CAAC,EAAEJ,IAAI,CAAC;EACZ,CAAC;EAEDhB,SAAS,CAAC,MAAM;IACdK,OAAO,CAAC,QAAQ,EAAE,CAAC,EAAE,GAAG,EAAE,IAAI,CAAC;IAC/BA,OAAO,CAAC,QAAQ,EAAE,GAAG,EAAE,EAAE,EAAE,IAAI,CAAC;IAChCA,OAAO,CAAC,QAAQ,EAAE,CAAC,EAAE,EAAE,EAAE,IAAI,CAAC;;IAE9B;IACA,OAAO,MAAM;MACXkB,aAAa,CAACC,MAAM,CAAC;MACrBD,aAAa,CAACE,MAAM,CAAC;MACrBF,aAAa,CAACG,MAAM,CAAC;IACvB,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,oBACExB,OAAA;IAAKyB,KAAK,EAAE;MAACC,SAAS,EAAC;IAAM,CAAE;IAAAC,QAAA,gBAC7B3B,OAAA;MAAGI,EAAE,EAAC,QAAQ;MAAAuB,QAAA,EAAC;IAAC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eACpB/B,OAAA;MAAGI,EAAE,EAAC,QAAQ;MAAAuB,QAAA,EAAC;IAAG;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eACtB/B,OAAA;MAAGI,EAAE,EAAC,QAAQ;MAAAuB,QAAA,EAAC;IAAC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjB,CAAC;AAEV,CAAC;AAAC7B,EAAA,CApCID,gBAAgB;AAAA+B,EAAA,GAAhB/B,gBAAgB;AAsCtB,eAAeA,gBAAgB;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}