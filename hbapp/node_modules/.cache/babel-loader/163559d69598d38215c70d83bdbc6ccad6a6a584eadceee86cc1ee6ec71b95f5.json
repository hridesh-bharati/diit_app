{"ast":null,"code":"var _jsxFileName = \"E:\\\\React Js\\\\hbapp\\\\src\\\\Components\\\\Chat.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst YourComponent = () => {\n  _s();\n  const [checkboxChecked, setCheckboxChecked] = useState(false);\n  const [reCaptchaCompleted, setReCaptchaCompleted] = useState(false);\n  const [submit, setSubmit] = useState(false);\n  const [message, setMessage] = useState('');\n  useEffect(() => {\n    // Make sure to include your onloadCallback function here\n    window.onloadCallback = function () {\n      window.grecaptcha.render('g-recaptcha', {\n        'sitekey': '6LeSkxwpAAAAAJr0__9WFMn2k3bJ9EW1eT52aaqm',\n        'callback': function () {\n          setReCaptchaCompleted(true);\n        }\n      });\n    };\n  }, []);\n  const postForm = () => {\n    // Add your logic to submit the form data\n    // For example, you can make an API call here\n\n    // Update state variables accordingly\n    setSubmit(true);\n    setMessage('Submitted Successfully');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"col-12 px-1 py-3 my-4\",\n    style: {\n      background: AdmFooterBg,\n      color: AdmFooterText\n    },\n    id: \"declarationBg\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-check\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"g-recaptcha\",\n        id: \"g-recaptcha\",\n        \"data-sitekey\": \"6LeSkxwpAAAAAJr0__9WFMn2k3bJ9EW1eT52aaqm\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-success-subtle text-danger p-2 rounded rounded-pill d-inline\",\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"form-check-label h5\",\n          htmlFor: \"invalidCheck\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            className: \"validCheck\",\n            required: true,\n            onChange: e => setCheckboxChecked(e.target.checked)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"icon\",\n            children: \" \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              fontSize: '1.2rem !important'\n            },\n            children: \"Declaration\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-body-secondary\",\n            children: \" / \\u0918\\u094B\\u0937\\u0923\\u093E \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-12 ms-2\",\n      children: [submit ? /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-success ms-3\",\n        id: \"checkBtn\",\n        type: \"button\",\n        children: \"Submitted Successfully\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary ms-3\",\n        id: \"checkBtn\",\n        type: \"button\",\n        onClick: () => {\n          if (checkboxChecked && reCaptchaCompleted) {\n            postForm();\n          }\n        },\n        disabled: !checkboxChecked || !reCaptchaCompleted,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-danger d-inline px-1\",\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n};\n_s(YourComponent, \"Zlqs8Ht9B5SkIKdonZDR3r3hzBc=\");\n_c = YourComponent;\nexport default YourComponent;\nvar _c;\n$RefreshReg$(_c, \"YourComponent\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","YourComponent","_s","checkboxChecked","setCheckboxChecked","reCaptchaCompleted","setReCaptchaCompleted","submit","setSubmit","message","setMessage","window","onloadCallback","grecaptcha","render","callback","postForm","className","style","background","AdmFooterBg","color","AdmFooterText","id","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","required","onChange","e","target","checked","fontSize","onClick","disabled","_c","$RefreshReg$"],"sources":["E:/React Js/hbapp/src/Components/Chat.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst YourComponent = () => {\r\n    const [checkboxChecked, setCheckboxChecked] = useState(false);\r\n    const [reCaptchaCompleted, setReCaptchaCompleted] = useState(false);\r\n    const [submit, setSubmit] = useState(false);\r\n    const [message, setMessage] = useState('');\r\n\r\n    useEffect(() => {\r\n        // Make sure to include your onloadCallback function here\r\n        window.onloadCallback = function () {\r\n            window.grecaptcha.render('g-recaptcha', {\r\n                'sitekey': '6LeSkxwpAAAAAJr0__9WFMn2k3bJ9EW1eT52aaqm',\r\n                'callback': function () {\r\n                    setReCaptchaCompleted(true);\r\n                }\r\n            });\r\n        };\r\n    }, []);\r\n\r\n    const postForm = () => {\r\n        // Add your logic to submit the form data\r\n        // For example, you can make an API call here\r\n\r\n        // Update state variables accordingly\r\n        setSubmit(true);\r\n        setMessage('Submitted Successfully');\r\n    };\r\n\r\n    return (\r\n        <div className=\"col-12 px-1 py-3 my-4\" style={{ background: AdmFooterBg, color: AdmFooterText }} id=\"declarationBg\">\r\n            <div className=\"form-check\">\r\n                <div className=\"g-recaptcha\" id=\"g-recaptcha\" data-sitekey=\"6LeSkxwpAAAAAJr0__9WFMn2k3bJ9EW1eT52aaqm\"></div>\r\n                <div className=\"bg-success-subtle text-danger p-2 rounded rounded-pill d-inline\">\r\n                    <label className=\"form-check-label h5\" htmlFor=\"invalidCheck\">\r\n                        <input\r\n                            type=\"checkbox\"\r\n                            className=\"validCheck\"\r\n                            required\r\n                            onChange={(e) => setCheckboxChecked(e.target.checked)}\r\n                        />\r\n                        <span className=\"icon\"> </span>\r\n                        <span style={{ fontSize: '1.2rem !important' }}>Declaration</span>\r\n                        <span className=\"text-body-secondary\"> / घोषणा </span>\r\n                    </label>\r\n                </div>\r\n            </div>\r\n            <div className=\"col-12 ms-2\">\r\n                {submit ? (\r\n                    <button className=\"btn btn-success ms-3\" id=\"checkBtn\" type=\"button\">\r\n                        Submitted Successfully\r\n                    </button>\r\n                ) : (\r\n                    <button\r\n                        className=\"btn btn-primary ms-3\"\r\n                        id=\"checkBtn\"\r\n                        type=\"button\"\r\n                        onClick={() => {\r\n                            if (checkboxChecked && reCaptchaCompleted) {\r\n                                postForm();\r\n                            }\r\n                        }}\r\n                        disabled={!checkboxChecked || !reCaptchaCompleted}\r\n                    >\r\n                        Submit\r\n                    </button>\r\n                )}\r\n                <div className=\"text-danger d-inline px-1\">{message}</div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default YourComponent;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}